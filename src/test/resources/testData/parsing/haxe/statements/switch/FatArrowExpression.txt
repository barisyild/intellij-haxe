Haxe File
  PACKAGE_STATEMENT
    HaxePsiToken:package('package')
    HaxePsiToken:;(';')
  MODULE
    CLASS_DECLARATION
      HaxePsiToken:class('class')
      COMPONENT_NAME
        IDENTIFIER
          HaxePsiToken:ID('FatArrowExpression')
      CLASS_BODY
        HaxePsiToken:{('{')
        METHOD_DECLARATION
          METHOD_MODIFIER
            HaxePsiToken:public('public')
          HaxePsiToken:function('function')
          COMPONENT_NAME
            IDENTIFIER
              HaxePsiToken:ID('test')
          HaxePsiToken:(('(')
          PARAMETER_LIST
            <empty list>
          HaxePsiToken:)(')')
          BLOCK_STATEMENT
            HaxePsiToken:{('{')
            LOCAL_VAR_DECLARATION_LIST
              MUTABILITY_MODIFIER
                HaxePsiToken:var('var')
              LOCAL_VAR_DECLARATION
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('a')
                VAR_INIT
                  HaxePsiToken:=('=')
                  ARRAY_ACCESS_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        HaxePsiToken:ID('map1')
                    HaxePsiToken:[('[')
                    LITERAL_EXPRESSION
                      HaxePsiToken:LITINT('0')
                    HaxePsiToken:](']')
              HaxePsiToken:;(';')
            LOCAL_VAR_DECLARATION_LIST
              MUTABILITY_MODIFIER
                HaxePsiToken:var('var')
              LOCAL_VAR_DECLARATION
                COMPONENT_NAME
                  IDENTIFIER
                    HaxePsiToken:ID('b')
                TYPE_TAG
                  HaxePsiToken::(':')
                  TYPE_OR_ANONYMOUS
                    TYPE
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('Int')
                VAR_INIT
                  HaxePsiToken:=('=')
                  LITERAL_EXPRESSION
                    HaxePsiToken:LITINT('0')
              HaxePsiToken:;(';')
            PsiComment(MSL_COMMENT)('//TODO mlo: not sure if any of this makes any sence now?')
            PsiComment(MSL_COMMENT)('// fatArrow expressions are only used in map inits right?')
            PsiComment(MSL_COMMENT)('// these looks more like extractor expressons')
            SWITCH_STATEMENT
              HaxePsiToken:switch('switch')
              REFERENCE_EXPRESSION
                IDENTIFIER
                  HaxePsiToken:ID('a')
              SWITCH_BLOCK
                HaxePsiToken:{('{')
                PsiComment(MSL_COMMENT)('// This should parse as a fatArrowExpression.')
                SWITCH_CASE
                  HaxePsiToken:case('case')
                  SWITCH_CASE_EXPR
                    EXTRACTOR_MATCH_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('b')
                      HaxePsiToken:=>('=>')
                      SWITCH_CASE_EXPR
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('_')
                  HaxePsiToken::(':')
                  SWITCH_CASE_BLOCK
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('trace')
                      HaxePsiToken:(('(')
                      CALL_EXPRESSION_LIST
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                      HaxePsiToken:)(')')
                    HaxePsiToken:;(';')
                SWITCH_CASE
                  HaxePsiToken:case('case')
                  SWITCH_CASE_EXPR
                    SWITCH_EXTRACTOR_EXPRESSION
                      HaxePsiToken:(('(')
                      EXTRACTOR_MATCH_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                        HaxePsiToken:=>('=>')
                        SWITCH_CASE_EXPR
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('_')
                      HaxePsiToken:)(')')
                  HaxePsiToken::(':')
                  SWITCH_CASE_BLOCK
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('trace')
                      HaxePsiToken:(('(')
                      CALL_EXPRESSION_LIST
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                      HaxePsiToken:)(')')
                    HaxePsiToken:;(';')
                SWITCH_CASE
                  HaxePsiToken:case('case')
                  SWITCH_CASE_EXPR
                    SWITCH_EXTRACTOR_EXPRESSION
                      HaxePsiToken:(('(')
                      EXTRACTOR_MATCH_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                        HaxePsiToken:=>('=>')
                        SWITCH_CASE_EXPR
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('_')
                      HaxePsiToken:)(')')
                  HaxePsiToken:|('|')
                  SWITCH_CASE_EXPR
                    SWITCH_EXTRACTOR_EXPRESSION
                      HaxePsiToken:(('(')
                      EXTRACTOR_MATCH_EXPRESSION
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                        HaxePsiToken:=>('=>')
                        SWITCH_CASE_EXPR
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              HaxePsiToken:ID('_')
                      HaxePsiToken:)(')')
                  HaxePsiToken::(':')
                  SWITCH_CASE_BLOCK
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('trace')
                      HaxePsiToken:(('(')
                      CALL_EXPRESSION_LIST
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                      HaxePsiToken:)(')')
                    HaxePsiToken:;(';')
                SWITCH_CASE
                  HaxePsiToken:case('case')
                  SWITCH_CASE_EXPR
                    EXTRACTOR_MATCH_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('b')
                      HaxePsiToken:=>('=>')
                      SWITCH_CASE_EXPR
                        EXTRACTOR_MATCH_EXPRESSION
                          BITWISE_EXPRESSION
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('_')
                            BIT_OPERATION
                              HaxePsiToken:|('|')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('b')
                          HaxePsiToken:=>('=>')
                          SWITCH_CASE_EXPR
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                HaxePsiToken:ID('_')
                  HaxePsiToken::(':')
                  SWITCH_CASE_BLOCK
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          HaxePsiToken:ID('trace')
                      HaxePsiToken:(('(')
                      CALL_EXPRESSION_LIST
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            HaxePsiToken:ID('b')
                      HaxePsiToken:)(')')
                    HaxePsiToken:;(';')
                HaxePsiToken:}('}')
            HaxePsiToken:}('}')
        HaxePsiToken:}('}')